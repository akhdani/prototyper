goog.provide("ng.material.components.icon");goog.require("ng.material.core");angular.module("material.components.icon",["material.core"]).directive("mdIcon",mdIconDirective);function mdIconDirective($mdIcon,$mdTheming,$mdAria,$interpolate){return{scope:{fontSet:"@mdFontSet",fontIcon:"@mdFontIcon",svgIcon:"@mdSvgIcon",svgSrc:"@mdSvgSrc"},restrict:"E",link:postLink};function postLink(scope,element,attr){$mdTheming(element);prepareForFontIcon();var label=attr.alt||scope.fontIcon||scope.svgIcon||element.text();var attrName=attr.$normalize(attr.$attr.mdSvgIcon||attr.$attr.mdSvgSrc||"");if(!attr["aria-label"]){if(label!=""&&!parentsHaveText()){$mdAria.expect(element,"aria-label",label);$mdAria.expect(element,"role","img")}else if(!element.text()){$mdAria.expect(element,"aria-hidden","true")}}if(attrName){attr.$observe(attrName,function(attrVal){element.empty();if(attrVal){$mdIcon(attrVal).then(function(svg){element.append(svg)})}})}function parentsHaveText(){var parent=element.parent();if(parent.attr("aria-label")||parent.text()){return true}else if(parent.parent().attr("aria-label")||parent.parent().text()){return true}return false}function prepareForFontIcon(){if(!scope.svgIcon&&!scope.svgSrc){if(scope.fontIcon){element.addClass("md-font");element.addClass(scope.fontIcon)}else{element.addClass($mdIcon.fontSet(scope.fontSet))}}}}}mdIconDirective.$inject=["$mdIcon","$mdTheming","$mdAria","$interpolate"];angular.module("material.components.icon").provider("$mdIcon",MdIconProvider);var config={defaultViewBoxSize:24,defaultFontSet:"material-icons",fontSets:[]};function MdIconProvider(){}MdIconProvider.prototype={icon:function(id,url,viewBoxSize){if(id.indexOf(":")==-1)id="$default:"+id;config[id]=new ConfigurationItem(url,viewBoxSize);return this},iconSet:function(id,url,viewBoxSize){config[id]=new ConfigurationItem(url,viewBoxSize);return this},defaultIconSet:function(url,viewBoxSize){var setName="$default";if(!config[setName]){config[setName]=new ConfigurationItem(url,viewBoxSize)}config[setName].viewBoxSize=viewBoxSize||config.defaultViewBoxSize;return this},defaultViewBoxSize:function(viewBoxSize){config.defaultViewBoxSize=viewBoxSize;return this},fontSet:function fontSet(alias,className){config.fontSets.push({alias:alias,fontSet:className||alias})},defaultFontSet:function defaultFontSet(className){config.defaultFontSet=!className?"":className;return this},defaultIconSize:function defaultIconSize(iconSize){config.defaultIconSize=iconSize;return this},preloadIcons:function($templateCache){var iconProvider=this;var svgRegistry=[{id:"md-tabs-arrow",url:"md-tabs-arrow.svg",svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><g><polygon points="15.4,7.4 14,6 8,12 14,18 15.4,16.6 10.8,12 "/></g></svg>'},{id:"md-close",url:"md-close.svg",svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><g><path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"/></g></svg>'},{id:"md-cancel",url:"md-cancel.svg",svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><g><path d="M12 2c-5.53 0-10 4.47-10 10s4.47 10 10 10 10-4.47 10-10-4.47-10-10-10zm5 13.59l-1.41 1.41-3.59-3.59-3.59 3.59-1.41-1.41 3.59-3.59-3.59-3.59 1.41-1.41 3.59 3.59 3.59-3.59 1.41 1.41-3.59 3.59 3.59 3.59z"/></g></svg>'},{id:"md-menu",url:"md-menu.svg",svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 100 100"><path d="M 50 0 L 100 14 L 92 80 L 50 100 L 8 80 L 0 14 Z" fill="#b2b2b2"></path><path d="M 50 5 L 6 18 L 13.5 77 L 50 94 Z" fill="#E42939"></path><path d="M 50 5 L 94 18 L 86.5 77 L 50 94 Z" fill="#B72833"></path><path d="M 50 7 L 83 75 L 72 75 L 65 59 L 50 59 L 50 50 L 61 50 L 50 26 Z" fill="#b2b2b2"></path><path d="M 50 7 L 17 75 L 28 75 L 35 59 L 50 59 L 50 50 L 39 50 L 50 26 Z" fill="#fff"></path></svg>'},{id:"md-toggle-arrow",url:"md-toggle-arrow-svg",svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 48 48"><path d="M24 16l-12 12 2.83 2.83 9.17-9.17 9.17 9.17 2.83-2.83z"/><path d="M0 0h48v48h-48z" fill="none"/></svg>'}];svgRegistry.forEach(function(asset){iconProvider.icon(asset.id,asset.url);$templateCache.put(asset.url,asset.svg)})},$get:["$http","$q","$log","$templateCache",function($http,$q,$log,$templateCache){this.preloadIcons($templateCache);return MdIconService(config,$http,$q,$log,$templateCache)}]};function ConfigurationItem(url,viewBoxSize){this.url=url;this.viewBoxSize=viewBoxSize||config.defaultViewBoxSize}function MdIconService(config,$http,$q,$log,$templateCache){var iconCache={};var urlRegex=/[-a-zA-Z0-9@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&//=]*)?/i;Icon.prototype={clone:cloneSVG,prepare:prepareAndStyle};getIcon.fontSet=findRegisteredFontSet;return getIcon;function getIcon(id){id=id||"";if(iconCache[id])return $q.when(iconCache[id].clone());if(urlRegex.test(id))return loadByURL(id).then(cacheIcon(id));if(id.indexOf(":")==-1)id="$default:"+id;return loadByID(id).catch(loadFromIconSet).catch(announceIdNotFound).catch(announceNotFound).then(cacheIcon(id))}function findRegisteredFontSet(alias){var useDefault=angular.isUndefined(alias)||!(alias&&alias.length);if(useDefault)return config.defaultFontSet;var result=alias;angular.forEach(config.fontSets,function(it){if(it.alias==alias)result=it.fontSet||result});return result}function cacheIcon(id){return function updateCache(icon){iconCache[id]=isIcon(icon)?icon:new Icon(icon,config[id]);return iconCache[id].clone()}}function loadByID(id){var iconConfig=config[id];return!iconConfig?$q.reject(id):loadByURL(iconConfig.url).then(function(icon){return new Icon(icon,iconConfig)})}function loadFromIconSet(id){var setName=id.substring(0,id.lastIndexOf(":"))||"$default";var iconSetConfig=config[setName];return!iconSetConfig?$q.reject(id):loadByURL(iconSetConfig.url).then(extractFromSet);function extractFromSet(set){var iconName=id.slice(id.lastIndexOf(":")+1);var icon=set.querySelector("#"+iconName);return!icon?$q.reject(id):new Icon(icon,iconSetConfig)}}function loadByURL(url){return $http.get(url,{cache:$templateCache}).then(function(response){return angular.element("<div>").append(response.data).find("svg")[0]})}function announceIdNotFound(id){var msg;if(angular.isString(id)){msg="icon "+id+" not found";$log.warn(msg)}return $q.reject(msg||id)}function announceNotFound(err){var msg=angular.isString(err)?err:err.message||err.data||err.statusText;$log.warn(msg);return $q.reject(msg)}function isIcon(target){return angular.isDefined(target.element)&&angular.isDefined(target.config)}function Icon(el,config){if(el.tagName!="svg"){el=angular.element('<svg xmlns="http://www.w3.org/2000/svg">').append(el)[0]}if(!el.getAttribute("xmlns")){el.setAttribute("xmlns","http://www.w3.org/2000/svg")}this.element=el;this.config=config;this.prepare()}function prepareAndStyle(){var viewBoxSize=this.config?this.config.viewBoxSize:config.defaultViewBoxSize;angular.forEach({fit:"",height:"100%",width:"100%",preserveAspectRatio:"xMidYMid meet",viewBox:this.element.getAttribute("viewBox")||"0 0 "+viewBoxSize+" "+viewBoxSize},function(val,attr){this.element.setAttribute(attr,val)},this);angular.forEach({"pointer-events":"none",display:"block"},function(val,style){this.element.style[style]=val},this)}function cloneSVG(){return this.element.cloneNode(true)}}ng.material.components.icon=angular.module("material.components.icon");