(function(window,angular,undefined){"use strict";angular.module("material.components.menu",["material.core","material.components.backdrop"]).directive("mdMenu",MenuDirective).controller("mdMenuCtrl",MenuController);function MenuDirective($mdMenu){return{restrict:"E",require:"mdMenu",controller:"mdMenuCtrl",scope:true,compile:compile};function compile(templateElement){templateElement.addClass("md-menu");var triggerElement=templateElement.children()[0];if(!triggerElement.hasAttribute("ng-click")){triggerElement=triggerElement.querySelector("[ng-click]")}triggerElement&&triggerElement.setAttribute("aria-haspopup","true");if(templateElement.children().length!=2){throw Error("Invalid HTML for md-menu. Expected two children elements.")}return link}function link(scope,element,attrs,mdMenuCtrl){var menuContainer=angular.element('<div class="md-open-menu-container md-whiteframe-z2"></div>');var menuContents=element.children()[1];menuContainer.append(menuContents);mdMenuCtrl.init(menuContainer);scope.$on("$destroy",function(){if(mdMenuCtrl.isOpen){menuContainer.remove();mdMenuCtrl.close()}})}}MenuDirective.$inject=["$mdMenu"];function MenuController($mdMenu,$attrs,$element,$scope){var menuContainer;var ctrl=this;var triggerElement;this.init=function(setMenuContainer){menuContainer=setMenuContainer;triggerElement=$element[0].querySelector("[ng-click]")};this.open=function openMenu(){ctrl.isOpen=true;triggerElement.setAttribute("aria-expanded","true");$mdMenu.show({mdMenuCtrl:ctrl,element:menuContainer,target:$element[0]})};$scope.$mdOpenMenu=this.open;this.close=function closeMenu(skipFocus){ctrl.isOpen=false;triggerElement.setAttribute("aria-expanded","false");$mdMenu.hide();if(!skipFocus){$element.children()[0].focus()}};this.positionMode=function(){var attachment=($attrs.mdPositionMode||"target").split(" ");if(attachment.length==1){attachment.push(attachment[0])}return{left:attachment[0],top:attachment[1]}};this.offsets=function(){var offsets=($attrs.mdOffset||"0 0").split(" ").map(parseFloat);if(offsets.length==2){return{left:offsets[0],top:offsets[1]}}else if(offsets.length==1){return{top:offsets[0],left:offsets[0]}}else{throw Error("Invalid offsets specified. Please follow format <x, y> or <n>")}}}MenuController.$inject=["$mdMenu","$attrs","$element","$scope"];angular.module("material.components.menu").provider("$mdMenu",MenuProvider);function MenuProvider($$interimElementProvider){var MENU_EDGE_MARGIN=8;menuDefaultOptions.$inject=["$$rAF","$window","$mdUtil","$mdTheming","$timeout","$mdConstant","$document"];return $$interimElementProvider("$mdMenu").setDefaults({methods:["target"],options:menuDefaultOptions});function menuDefaultOptions($$rAF,$window,$mdUtil,$mdTheming,$timeout,$mdConstant,$document){return{parent:"body",onShow:onShow,onRemove:onRemove,hasBackdrop:true,disableParentScroll:true,skipCompile:true,themable:true};function onShow(scope,element,opts){buildOpts(opts);$mdTheming.inherit(opts.menuContentEl,opts.target);handleResizing();if(opts.disableParentScroll){opts.restoreScroll=$mdUtil.disableScrollAround(opts.element)}$timeout(activateInteraction,75,false);if(opts.backdrop){$mdTheming.inherit(opts.backdrop,opts.parent);opts.parent.append(opts.backdrop)}showMenu();return $mdUtil.transitionEndPromise(element,{timeout:350});function buildOpts(){if(!opts.target){throw Error("$mdMenu.show() expected a target to animate from in options.target")}angular.extend(opts,{alreadyOpen:false,isRemoved:false,target:angular.element(opts.target),parent:angular.element(opts.parent),menuContentEl:angular.element(element[0].querySelector("md-menu-content")),backdrop:opts.hasBackdrop&&angular.element('<md-backdrop class="md-menu-backdrop md-click-catcher">')})}function handleResizing(){opts.resizeFn=function(){positionMenu(element,opts)};angular.element($window).on("resize",opts.resizeFn);angular.element($window).on("orientationchange",opts.resizeFn)}function showMenu(){opts.parent.append(element);element.removeClass("md-leave");$$rAF(function(){$$rAF(function(){positionMenu(element,opts);$$rAF(function(){element.addClass("md-active");opts.alreadyOpen=true;element[0].style[$mdConstant.CSS.TRANSFORM]=""})})})}function activateInteraction(){element.addClass("md-clickable");opts.backdrop&&opts.backdrop.on("click",function(e){e.preventDefault();e.stopPropagation();opts.mdMenuCtrl.close(true)});opts.menuContentEl.on("keydown",function(ev){scope.$apply(function(){switch(ev.keyCode){case $mdConstant.KEY_CODE.ESCAPE:opts.mdMenuCtrl.close();break;case $mdConstant.KEY_CODE.UP_ARROW:focusMenuItem(ev,opts.menuContentEl,opts,-1);break;case $mdConstant.KEY_CODE.DOWN_ARROW:focusMenuItem(ev,opts.menuContentEl,opts,1);break}})});opts.menuContentEl.on("click",function(e){var target=e.target;do{if(target&&target.hasAttribute("ng-click")){if(!target.hasAttribute("disabled")){close()}break}}while((target=target.parentNode)&&target!=opts.menuContentEl);function close(){scope.$apply(function(){opts.mdMenuCtrl.close()})}});var focusTarget=opts.menuContentEl[0].querySelector("[md-menu-focus-target]");if(!focusTarget)focusTarget=opts.menuContentEl[0].firstElementChild.firstElementChild;focusTarget.focus()}}function focusMenuItem(e,menuEl,opts,direction){var currentItem=$mdUtil.getClosest(e.target,"MD-MENU-ITEM");var items=$mdUtil.nodesToArray(menuEl[0].children);var currentIndex=items.indexOf(currentItem);for(var i=currentIndex+direction;i>=0&&i<items.length;i=i+direction){var focusTarget=items[i].firstElementChild||items[i];var didFocus=attemptFocus(focusTarget);if(didFocus){break}}}function attemptFocus(el){if(el&&el.getAttribute("tabindex")!=-1){el.focus();if($document[0].activeElement==el){return true}else{return false}}}function onRemove(scope,element,opts){opts.isRemoved=true;element.addClass("md-leave").removeClass("md-clickable");angular.element($window).off("resize",opts.resizeFn);angular.element($window).off("orientationchange",opts.resizeFn);opts.resizeFn=undefined;return $mdUtil.transitionEndPromise(element,{timeout:350}).then(function(){element.removeClass("md-active");opts.backdrop&&opts.backdrop.remove();if(element[0].parentNode===opts.parent[0]){opts.parent[0].removeChild(element[0])}opts.restoreScroll&&opts.restoreScroll()})}function positionMenu(el,opts){if(opts.isRemoved)return;var containerNode=el[0],openMenuNode=el[0].firstElementChild,openMenuNodeRect=openMenuNode.getBoundingClientRect(),boundryNode=opts.parent[0],boundryNodeRect=boundryNode.getBoundingClientRect();var originNode=opts.target[0].querySelector("[md-menu-origin]")||opts.target[0],originNodeRect=originNode.getBoundingClientRect();var bounds={left:boundryNodeRect.left+MENU_EDGE_MARGIN,top:boundryNodeRect.top+MENU_EDGE_MARGIN,bottom:boundryNodeRect.bottom-MENU_EDGE_MARGIN,right:boundryNodeRect.right-MENU_EDGE_MARGIN};var alignTarget,alignTargetRect,existingOffsets;var positionMode=opts.mdMenuCtrl.positionMode();if(positionMode.top=="target"||positionMode.left=="target"||positionMode.left=="target-right"){alignTarget=openMenuNode.firstElementChild.firstElementChild||openMenuNode.firstElementChild;alignTarget=alignTarget.querySelector("[md-menu-align-target]")||alignTarget;alignTargetRect=alignTarget.getBoundingClientRect();existingOffsets={top:parseFloat(containerNode.style.top||0),left:parseFloat(containerNode.style.left||0)}}var position={};var transformOrigin="top ";switch(positionMode.top){case"target":position.top=existingOffsets.top+originNodeRect.top-alignTargetRect.top;break;default:throw new Error('Invalid target mode "'+positionMode.top+'" specified for md-menu on Y axis.')}switch(positionMode.left){case"target":position.left=existingOffsets.left+originNodeRect.left-alignTargetRect.left;transformOrigin+="left";break;case"target-right":position.left=originNodeRect.right-openMenuNodeRect.width+(openMenuNodeRect.right-alignTargetRect.right);transformOrigin+="right";break;default:throw new Error('Invalid target mode "'+positionMode.left+'" specified for md-menu on X axis.')}var offsets=opts.mdMenuCtrl.offsets();position.top+=offsets.top;position.left+=offsets.left;clamp(position);el.css({top:position.top+"px",left:position.left+"px"});containerNode.style[$mdConstant.CSS.TRANSFORM_ORIGIN]=transformOrigin;if(!opts.alreadyOpen){containerNode.style[$mdConstant.CSS.TRANSFORM]="scale("+Math.min(originNodeRect.width/containerNode.offsetWidth,1)+","+Math.min(originNodeRect.height/containerNode.offsetHeight,1)+")"}function clamp(pos){pos.top=Math.max(Math.min(pos.top,bounds.bottom-containerNode.offsetHeight),bounds.top);pos.left=Math.max(Math.min(pos.left,bounds.right-containerNode.offsetWidth),bounds.left)}}}}MenuProvider.$inject=["$$interimElementProvider"]})(window,window.angular);